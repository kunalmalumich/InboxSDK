{
  "version": 3,
  "sources": ["../background.js"],
  "sourcesContent": ["/* global chrome */\n\n// --- CONFIGURATION ---\n// These values are injected by the build script (build.sh) as a global CONFIG object.\nconsole.log('[Background] Starting in PRODUCTION mode');\n\n// Helper function to get redirect URL that works in both Chrome and Edge\nfunction getRedirectURL() {\n  // For Edge compatibility, use the hardcoded URL if getRedirectURL is not available\n  const redirectUri = chrome.identity.getRedirectURL \n    ? chrome.identity.getRedirectURL()\n    : \"https://trystamp.ai/oauth2-callback\";\n  \n  console.log('[Background] Using redirect URI:', redirectUri);\n  return redirectUri;\n}\n\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  console.log('[Background] Received message:', message.type);\n\n  // --- Message Handler 1: InboxSDK Page World Injection ---\n  if (message.type === 'inboxsdk__injectPageWorld' && sender.tab) {\n    const promise = new Promise((resolve) => {\n      console.log('[Background] Handling InboxSDK page world injection');\n      if (chrome.scripting) {\n        const target = { tabId: sender.tab.id, frameIds: [sender.frameId] };\n        chrome.scripting.executeScript({\n          target: target,\n          world: 'MAIN',\n          files: ['pageWorld.js'],\n        }, () => resolve(true));\n      } else {\n        resolve(false);\n      }\n    });\n    promise.then(sendResponse);\n    return true;\n  }\n\n  // --- Message Handler 2: Get Authentication Code ---\n  if (message.type === 'GET_AUTH_CODE') {\n    const promise = new Promise((resolve, reject) => {\n      console.log('[Background] Starting GET_AUTH_CODE flow using launchWebAuthFlow.');\n\n      const manifest = chrome.runtime.getManifest();\n      const clientId = manifest.oauth2.client_id;\n      const scopes = manifest.oauth2.scopes.join(' ');\n      const redirectUri = getRedirectURL();\n\n      console.log('[Background] Auth flow parameters:', { clientId, redirectUri });\n\n      const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?` +\n        `client_id=${clientId}&` +\n        `response_type=code&` +\n        `access_type=offline&` + \n        `prompt=consent&` +      \n        `scope=${encodeURIComponent(scopes)}&` +\n        `redirect_uri=${encodeURIComponent(redirectUri)}`;\n\n      console.log('[Background] Generated auth URL:', authUrl);\n\n      try {\n        chrome.identity.launchWebAuthFlow({ url: authUrl, interactive: true }, (responseUrl) => {\n          if (chrome.runtime.lastError) {\n            console.error('[Background] Auth flow error:', chrome.runtime.lastError.message);\n            reject(new Error(chrome.runtime.lastError.message));\n            return;\n          }\n\n          if (responseUrl) {\n            console.log('[Background] Received response URL:', responseUrl);\n            const code = new URL(responseUrl).searchParams.get('code');\n            resolve({ code: code, redirectUri: redirectUri });\n          } else {\n            console.log('[Background] Auth flow cancelled by user.');\n            reject(new Error('Auth flow cancelled by user.'));\n          }\n        });\n      } catch (error) {\n        console.error('[Background] Error in launchWebAuthFlow:', error);\n        reject(error);\n      }\n    });\n\n    promise.then(sendResponse).catch(error => sendResponse({ error: error.message }));\n    return true; // Indicates an async response\n  }\n\n  // --- Message Handler 3: Inject Floating Chat Scripts ---\n  if (message.type === 'INJECT_FLOATING_CHAT_SCRIPTS') {\n    (async () => {\n      try {\n        console.log('[Background] Handling INJECT_FLOATING_CHAT_SCRIPTS');\n        const [tab] = await chrome.tabs.query({active: true, lastFocusedWindow: true});\n        if (tab) {\n          await chrome.scripting.executeScript({\n            target: { tabId: tab.id },\n            files: [\n              'floating-chat/floating-chat.js',\n              'floating-chat/floating-chat-manager.js'\n            ]\n          });\n          console.log('[Background] Successfully injected floating chat scripts.');\n          sendResponse({ success: true });\n        } else {\n          throw new Error('No active tab found to inject scripts into.');\n        }\n      } catch (error) {\n        console.error('[Background] Failed to inject floating chat scripts:', error);\n        sendResponse({ success: false, error: error.message });\n      }\n    })();\n    return true; // Indicates an async response\n  }\n\n  // Log unhandled message types\n  console.warn('[Background] Unhandled message type:', message.type);\n  return false;\n}); "],
  "mappings": "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",
  "names": []
}
